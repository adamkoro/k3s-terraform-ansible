k3s_version: v1.24.7+k3s1
ansible_user: "adamkoro"
# k3s_token is required  masters can talk together securely
# this token should be alpha numeric only
k3s_token: "adamkoro-prod"
k3s_server_location: /var/lib/rancher/k3s
systemd_dir: "/etc/systemd/system"

flannel_iface: "eth0"
cluster_endpoint: "192.168.1.20"

flannel_node_ip: '{{ ansible_facts[flannel_iface]["ipv4"]["address"] }}'

#############
## Default args
#############
extra_args: >-
  --flannel-iface={{ flannel_iface }}
  --node-ip={{ flannel_node_ip }}

#############
## Init args
#############
etcd_init_args: >-
  {% if groups['etcd'] | length > 1 %}
    {% if ansible_hostname == hostvars[groups['etcd'][0]]['ansible_hostname'] %}
      --cluster-init
    {% else %}
      --server https://{{ hostvars[groups['etcd'][0]].flannel_node_ip }}:6443
    {% endif %}
    --token {{ k3s_token }}
    --tls-san {{ cluster_endpoint }}
  {% endif %}
  {{ extra_args }}
  --node-taint EtcdOnly=true:NoExecute
  --disable servicelb 
  --disable local-storage
  --disable-apiserver
  --disable-controller-manager
  --disable-scheduler

control_plane_init_args: >-
  {{ extra_args }}
  --server https://{{ hostvars[groups['etcd'][0]].flannel_node_ip }}:6443
  --token {{ hostvars[groups['etcd'][0]]['token'] | default(k3s_token) }}
  --node-label node.kubernetes.io/control-plane=true
  --node-taint CriticalAddonsOnly=true:NoExecute
  --disable servicelb 
  --disable local-storage
  --disable-etcd

#############
## Runtime args
#############
extra_etcd_args: >-
  {{ extra_args }}
  --server https://{{ cluster_endpoint }}:6443
  --token {{ hostvars[groups['etcd'][0]]['token'] | default(k3s_token) }}
  --node-label node.kubernetes.io/etcd=true
  --node-taint EtcdOnly=true:NoExecute
  --disable-apiserver
  --disable-controller-manager
  --disable-scheduler
  --disable servicelb 
  --disable local-storage
  --kube-apiserver-arg default-not-ready-toleration-seconds=20 
  --kube-apiserver-arg default-unreachable-toleration-seconds=20 
  --kube-controller-arg node-monitor-period=20s 
  --kube-controller-arg node-monitor-grace-period=20s 
  --kubelet-arg node-status-update-frequency=20s

extra_control_plane_args: >-
  {{ extra_args }}
  --server https://{{ cluster_endpoint }}:6444
  --token {{ hostvars[groups['etcd'][0]]['token'] | default(k3s_token) }}
  --node-label node.kubernetes.io/control-plane=true
  --node-taint CriticalAddonsOnly=true:NoExecute
  --disable servicelb 
  --disable local-storage
  --disable-etcd
  --kube-apiserver-arg default-not-ready-toleration-seconds=20 
  --kube-apiserver-arg default-unreachable-toleration-seconds=20 
  --kube-controller-arg node-monitor-period=20s 
  --kube-controller-arg node-monitor-grace-period=20s 
  --kubelet-arg node-status-update-frequency=20s

extra_agent_args: >-
  {{ extra_args }}
  --token {{ hostvars[groups['etcd'][0]]['token'] | default(k3s_token) }}
  --node-label node.kubernetes.io/worker=true
  --node-label node.longhorn.io/create-default-disk=true
  --server https://{{ cluster_endpoint }}:6443
  --kubelet-arg node-status-update-frequency=20s

# Kubeconfig cluster name
cluster_name: "production"
kconfig_cluster_name: "adamkoro"

# Cloudflare credentials for Let's encrypt certs
cloudflare_email: ""
cloudflare_api_key: ""

# Longhorn setting
longhorn_version: "1.3.2"
longhorn_ingress_enabled: "true"
longhorn_hostname: "longhorn.adamkoro.local"
longhorn_replica_number: 1
longhorn_disk_on_labeled_node: "true"
longhorn_backup_path: "nfs://192.168.1.100:/mnt/backups/longhorn-backups"

# Cert-manager setting
cert_manager_version: "v1.9.1"


# Metallb settings
metal_lb_version: "v0.12.1"
metal_lb_ip_range: "192.168.1.35-192.168.1.40"

