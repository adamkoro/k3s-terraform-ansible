---
- name: Kill k3s-init temporary service which is used for initialization
  ansible.builtin.systemd:
    name: k3s-init
    state: stopped
  failed_when: false

- name: Copy manifests to the first node
  ansible.builtin.include_tasks: manifests.yml
  when: inventory_hostname == groups['server'][0] and skip_manifest_deploy is false
  tags:
    - manifests

- name: Copy K3s service file
  register: k3s_service
  ansible.builtin.template:
    src: "k3s.service.j2"
    dest: "/etc/systemd/system/k3s.service"
    owner: root
    group: root
    mode: "0644"

- name: Enable and check K3s service
  ansible.builtin.systemd:
    name: k3s
    daemon_reload: true
    state: restarted
    enabled: true
  when: k3s_service is changed or server_config_file is changed or registry_config_file is changed

- name: Create directory .kube
  ansible.builtin.file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    mode: "u=rwx,g=rx,o="
  when: inventory_hostname == groups['server'][0]

- name: Copy config file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="
  when: inventory_hostname == groups['server'][0]

- name: Delete default configs from kube config
  ansible.builtin.command: '{{ item }}'
  with_items:
    - /usr/local/bin/k3s kubectl config delete-cluster default --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config delete-context default --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config delete-user default --kubeconfig ~{{ ansible_user }}/.kube/config
  changed_when: false
  when: inventory_hostname == groups['server'][0]


- name: Read server cert from master
  ansible.builtin.slurp:
    path: "/var/lib/rancher/k3s/server/tls/server-ca.crt"
  register: server_cert
  when: inventory_hostname == groups['server'][0]

- name: Read admin client cert from master
  ansible.builtin.slurp:
    path: "/var/lib/rancher/k3s/server/tls/client-admin.crt"
  register: client_admin_cert
  when: inventory_hostname == groups['server'][0]

- name: Read admin client cert from master
  ansible.builtin.slurp:
    path: "/var/lib/rancher/k3s/server/tls/client-admin.key"
  register: client_admin_key
  when: inventory_hostname == groups['server'][0]

- name: Configure kube config for {{ cluster_name }}
  ansible.builtin.command: "{{ item }}"
  with_items:
    - /usr/local/bin/k3s kubectl config set-cluster {{ kconfig_cluster_name }} --server=https://{{ cluster_endpoint }}:6443 --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config set clusters.{{ kconfig_cluster_name }}.certificate-authority-data {{ server_cert.content }} --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config set-context {{ kconfig_cluster_name }} --user=admin_{{ kconfig_cluster_name }} --cluster={{ kconfig_cluster_name }} --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config set-credentials admin_{{ kconfig_cluster_name }} --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config set users.admin_{{ kconfig_cluster_name }}.client-certificate-data {{ client_admin_cert.content }} --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config set users.admin_{{ kconfig_cluster_name }}.client-key-data {{ client_admin_key.content }} --kubeconfig ~{{ ansible_user }}/.kube/config
    - /usr/local/bin/k3s kubectl config use-context {{ kconfig_cluster_name }} --kubeconfig ~{{ ansible_user }}/.kube/config
  when: inventory_hostname == groups['server'][0]
  changed_when: false

- name: Create kubectl symlink
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link

- name: Install kubectl bash completion
  ansible.builtin.shell: "/usr/local/bin/kubectl completion bash > /etc/bash_completion.d/kubectl"
  changed_when: false
  when: inventory_hostname in groups['server']

- name: Install k3s bash completion
  ansible.builtin.shell: "/usr/local/bin/k3s completion bash > /etc/bash_completion.d/k3s"
  changed_when: false
  when: inventory_hostname in groups['server']

- name: Install crictl bash completion
  ansible.builtin.shell: "/usr/local/bin/crictl completion bash > /etc/bash_completion.d/crictl"
  changed_when: false
  when: inventory_hostname in groups['server']
