global
    log /dev/log daemon
    maxconn 32768
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats user haproxy group haproxy mode 0640 level operator
    tune.bufsize 32768
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ALL:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4:!ADH:!LOW@STRENGTH

defaults
    log     global
    mode    http
    option  log-health-checks
    option  log-separate-errors
    option  dontlog-normal
    option  dontlognull
    option  httplog
    option  socket-stats
    retries 3
    option  redispatch
    maxconn 10000
    timeout connect     5s
    timeout client     5s
    timeout server    10s

frontend etcd_frontend
    bind :6444
    mode tcp
    acl network_allowed src {{ haproxy_kube_api_network }}
    tcp-request connection accept if network_allowed
    tcp-request connection reject if !network_allowed
    default_backend kube_api_etcd_nodes

backend kube_api_etcd_nodes
    mode tcp
    balance roundrobin
    {% for host in groups['etcd'] %}
    server {{ host }} {{ hostvars[host]["ansible_facts"][flannel_iface]["ipv4"]["address"] }}:6443 maxconn 100 check fall 3 rise 2 inter 2000
    {% endfor %}

frontend kube_api_frontend
    bind :6443
    mode tcp
    acl network_allowed src {{ haproxy_kube_api_network }}
    tcp-request connection accept if network_allowed
    tcp-request connection reject if !network_allowed
    default_backend kube_api_control-plane_nodes

backend kube_api_control-plane_nodes
    mode tcp
    balance roundrobin
    {% for host in groups['server'] %}
    server {{ host }} {{ hostvars[host]["ansible_facts"][flannel_iface]["ipv4"]["address"] }}:6443 maxconn 100 check fall 3 rise 2 inter 2000
    {% endfor %}

frontend http_frontend
    bind *:80
    mode tcp
    default_backend kube_http

backend kube_http
    mode tcp
    balance roundrobin
    {% for host in groups['server'] %}
    server {{ host }} {{ hostvars[host]["ansible_facts"][flannel_iface]["ipv4"]["address"] }}:80 maxconn 100 check fall 3 rise 2 inter 2000
    {% endfor %}

frontend https_frontend 
    bind *:443
    mode tcp
    default_backend kube_https

backend kube_https
    mode tcp
    balance roundrobin
    {% for host in groups['server'] %}
    server {{ host }} {{ hostvars[host]["ansible_facts"][flannel_iface]["ipv4"]["address"] }}:443 maxconn 100 check fall 3 rise 2 inter 2000
    {% endfor %}
